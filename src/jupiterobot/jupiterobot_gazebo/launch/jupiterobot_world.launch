<launch>
  <arg name="gui"        default="true"/>
  <arg name="world_file" default="$(env TURTLEBOT_GAZEBO_WORLD_FILE)"/>

  <arg name="base"       value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
  <arg name="battery"    value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 -->
  <arg name="3d_sensor"  value="$(optenv TURTLEBOT_3D_SENSOR astra)"/>  <!-- astra -->

  <!--**********Choose different robot description for different model. ***********-->
  <arg name="stacks"            default="h"                             doc="stack type displayed in visualisation/simulation [h for hexagons, c for circles]"/>
  <arg name="lasers"             default="r"                             doc="ladar type displayed in visualisation/simulation [n for None, r for rplidar_a1, h for hokuyo]"/>
  <arg name="arms"              default="n"                             doc="arm type displayed in visualisation/simulation [n for none, 5 for 5DOF arm, 7 for 7DOF arm]"/>
  <arg name="heads"             default="1"                             doc="head type displayed in visualisation/simulation [n for None, 1 for half fixed head, 2 for 2DOF head.]"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="world_name" value="$(arg world_file)"/>
  </include>

  <include file="$(find jupiterobot_gazebo)/launch/includes/$(arg base).launch.xml">
    <arg name="base"      value="$(arg base)"/>
    <arg name="stacks"    value="$(arg stacks)" />
    <arg name="lasers"    value="$(arg lasers)" />
    <arg name="arms"      value="$(arg arms)" />
    <arg name="heads"     value="$(arg heads)" />
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="/camera/depth/image_raw"/>
    <remap from="scan" to="/scan"/>
  </node>
</launch>
