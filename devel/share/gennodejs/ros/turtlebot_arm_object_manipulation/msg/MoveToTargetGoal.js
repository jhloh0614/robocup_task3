// Auto-generated. Do not edit!

// (in-package turtlebot_arm_object_manipulation.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class MoveToTargetGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.target_type = null;
      this.named_target = null;
    }
    else {
      if (initObj.hasOwnProperty('target_type')) {
        this.target_type = initObj.target_type
      }
      else {
        this.target_type = 0;
      }
      if (initObj.hasOwnProperty('named_target')) {
        this.named_target = initObj.named_target
      }
      else {
        this.named_target = '';
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type MoveToTargetGoal
    // Serialize message field [target_type]
    bufferOffset = _serializer.uint8(obj.target_type, buffer, bufferOffset);
    // Serialize message field [named_target]
    bufferOffset = _serializer.string(obj.named_target, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type MoveToTargetGoal
    let len;
    let data = new MoveToTargetGoal(null);
    // Deserialize message field [target_type]
    data.target_type = _deserializer.uint8(buffer, bufferOffset);
    // Deserialize message field [named_target]
    data.named_target = _deserializer.string(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += object.named_target.length;
    return length + 5;
  }

  static datatype() {
    // Returns string type for a message object
    return 'turtlebot_arm_object_manipulation/MoveToTargetGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return 'a0450d6732c71ca58c4402334c28860d';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    uint8 JOINT_STATE  = 1
    uint8 POSE_TARGET  = 2
    uint8 NAMED_TARGET = 3
    
    # goal definition
    uint8 target_type
    
    # TODO  sensor_msgs/JointState joint_state
    # TODO  geometry_msgs/PoseStamped pose_target
    string named_target
    
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new MoveToTargetGoal(null);
    if (msg.target_type !== undefined) {
      resolved.target_type = msg.target_type;
    }
    else {
      resolved.target_type = 0
    }

    if (msg.named_target !== undefined) {
      resolved.named_target = msg.named_target;
    }
    else {
      resolved.named_target = ''
    }

    return resolved;
    }
};

// Constants for message
MoveToTargetGoal.Constants = {
  JOINT_STATE: 1,
  POSE_TARGET: 2,
  NAMED_TARGET: 3,
}

module.exports = MoveToTargetGoal;
